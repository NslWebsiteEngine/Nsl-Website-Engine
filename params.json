{"name":"Nsl-website-engine","tagline":"The ultimative newsocialife.com website engine. Look the examples to see how it's simple to use it.","body":"# NSL Website Engine\r\n\r\nThis engine was originally developed for the new version of New Social Life, which is still in development :). This engine is really powerful, something that you have to try.\r\n\r\n## Features:\r\n\r\n### Router\r\n\r\nThe NSL Website Engine has a fantastic router (currently based on klein.php but we are working on removing it). The router supports all the major http router requests like: GET, POST, PUT, DELETE.\r\nUsing the router is really simple, just include the router protocol:\r\n\r\n```php\r\n<?php\r\n$lib->add(\"router\");\r\n```\r\n\r\nAnd use it with the super intuitive class structure: \r\n\r\n```php\r\n<?php\r\n$lib->add(\"router\");\r\n$lib->router->get(\"\", function() {\r\n   echo \"I GOT /\";\r\n});\r\n$lib->router->get(\"/friend\", function() {\r\n   echo \"I GOT /friend\";\r\n});\r\n$lib->router->post(\"/friend\", function() {\r\n   echo \"I GOT /friend from POST\";\r\n});\r\n$lib->router->all(\"404\", function() { \r\n   echo \"Oops, i don't know what you've requested\";\r\n});\r\n$lib->router->setUrl($_GET[\"url\"]);\r\n// and so on for all the methods.\r\n```\r\n\r\nAttention: the router requires a change in the server configuration, otherwhise you have to input the files in the query string, like index.php?url=/\r\n\r\nA proper configuration for Apache is the .httaccess:  \r\n\r\n```\r\nRewriteEngine On\r\nRewriteBase /\r\nRewriteCond %{REQUEST_FILENAME} !-f\r\nRewriteCond %{REQUEST_FILENAME} !-d\r\nRewriteRule ^(.*)$ index.php?url=$1 [L,QSA]\r\n```\r\nFor help in the configuration don't hesitate to make an issue containing your http server name.\r\n\r\n### Function typizer\r\n\r\nThe innovative function typzer allows you to use types in functions, just like in C\r\n\r\n```php\r\n<?php\r\nfunction test(string $a, number $b, mixed $c) {\r\n\tif(is_array($c))\r\n\t\treturn [\"a\"];\r\n\telse\r\n\t\treturn ++$number;\r\n}\r\nfunction test2(number $a, boolean $b) {\r\n\tif($a == 5)\r\n\t\treturn $b;\r\n\treturn false; \r\n}\r\ntest(\"Hello\", 12, []); // returns an array with an element a\r\ntest(\"Hello\", 12.1, false); // return 13.1\r\ntest(\"Hello\", 12.0, false); // return 13.0\r\ntest(12, \"Hello\", false); // THIS ONE THROWS A PHP ERROR\r\ntest2(2, true); // returns false\r\ntest2(5, true); // return true\r\ntest2(5, false); // returns false\r\ntest2(\"hello\", false); // THIS ONE THROWS A PHP ERROR\r\n```\r\n\r\nAND EVEN MORE\r\n\r\n## License\r\nDeveloper: Danny Morabito\r\nYou can use this in your projects but the developers' names HAVE to be in the comment of every file.\r\nThis library uses some things like twig and klein.php, i didn't develop them, so the credits are to their, not mine.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}